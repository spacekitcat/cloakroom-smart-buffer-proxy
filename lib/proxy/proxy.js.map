{"version":3,"sources":["../../src/proxy/proxy.js"],"names":["Proxy","constructor","maximumSize","offset","internalCache","Buffer","from","append","appendContent","concat","overflow","length","slice","_translate","index","flipped","getCloakroomTicket","readCloakroomTicket","cloakRoomTicket","value","getMaximumSize","getReadOnlyBuffer","readOnlyInternalCacheRef","Object","freeze"],"mappings":"AAAA;;;;;;;AAEA,MAAMA,KAAN,CAAY;AACVC,EAAAA,WAAW,CAACC,WAAW,GAAG,KAAf,EAAsB;AAC/B,SAAKC,MAAL,GAAc,CAAd;AACA,SAAKC,aAAL,GAAqBC,MAAM,CAACC,IAAP,CAAY,EAAZ,CAArB;AACA,SAAKJ,WAAL,GAAmBA,WAAnB;AACD;;AAEDK,EAAAA,MAAM,CAACC,aAAD,EAAgB;AACpB,SAAKJ,aAAL,GAAqBC,MAAM,CAACI,MAAP,CAAc,CAAC,KAAKL,aAAN,EAAqBI,aAArB,CAAd,CAArB;AACA,UAAME,QAAQ,GAAG,KAAKN,aAAL,CAAmBO,MAAnB,GAA4B,KAAKT,WAAlD;;AACA,QAAIQ,QAAQ,GAAG,CAAf,EAAkB;AAChB,WAAKP,MAAL,IAAeO,QAAf;AACA,WAAKN,aAAL,GAAqB,KAAKA,aAAL,CAAmBQ,KAAnB,CAAyB,KAAKR,aAAL,CAAmBO,MAAnB,GAA4B,KAAKT,WAA1D,CAArB;AACD;AACF;;AAEDW,EAAAA,UAAU,CAACC,KAAD,EAAQ;AAChB,UAAMC,OAAO,GAAG,KAAKX,aAAL,CAAmBO,MAAnB,GAA4BG,KAA5B,GAAoC,CAApD;AACA,WAAOC,OAAP;AACD;;AAEDC,EAAAA,kBAAkB,CAACF,KAAD,EAAQ;AACxB,WAAO,KAAKD,UAAL,CAAgBC,KAAhB,IAAyB,KAAKX,MAArC;AACD;;AAEDc,EAAAA,mBAAmB,CAACC,eAAD,EAAkB;AACnC,UAAMC,KAAK,GAAG,KAAKf,aAAL,CAAmBc,eAAe,GAAG,KAAKf,MAAvB,GAAgC,CAAnD,CAAd;AACA,WAAOgB,KAAK,GAAGA,KAAH,GAAW,IAAvB;AACD;;AAEDC,EAAAA,cAAc,GAAG;AACf,WAAO,KAAKlB,WAAZ;AACD;;AAEDmB,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,wBAAwB,GAAG,CAAC,GAAG,KAAKlB,aAAT,CAAjC;AACAmB,IAAAA,MAAM,CAACC,MAAP,CAAcF,wBAAd;AACA,WAAOA,wBAAP;AACD;;AAtCS;;eAyCGtB,K","sourcesContent":["'use strict'\n\nclass Proxy {\n  constructor(maximumSize = 32000) {\n    this.offset = 0;\n    this.internalCache = Buffer.from([]);\n    this.maximumSize = maximumSize\n  }\n\n  append(appendContent) {\n    this.internalCache = Buffer.concat([this.internalCache, appendContent]);\n    const overflow = this.internalCache.length - this.maximumSize;\n    if (overflow > 0) {\n      this.offset -= overflow;\n      this.internalCache = this.internalCache.slice(this.internalCache.length - this.maximumSize);\n    }\n  }\n\n  _translate(index) {\n    const flipped = this.internalCache.length - index - 2;\n    return flipped;\n  }\n\n  getCloakroomTicket(index) {\n    return this._translate(index) + this.offset;\n  }\n\n  readCloakroomTicket(cloakRoomTicket) {\n    const value = this.internalCache[cloakRoomTicket + this.offset + 1];\n    return value ? value : null;\n  }\n\n  getMaximumSize() {\n    return this.maximumSize;\n  }\n\n  getReadOnlyBuffer() {\n    const readOnlyInternalCacheRef = [...this.internalCache];\n    Object.freeze(readOnlyInternalCacheRef);\n    return readOnlyInternalCacheRef;\n  }\n}\n\nexport default Proxy;\n"],"file":"proxy.js"}